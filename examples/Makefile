# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  c_ex1_config = debug
  std_shader_ex1_config = debug
  line_testing_config = debug
  c_ex2_config = debug
  std_shader_ex2_config = debug
  c_ex3_config = debug
  ex1_config = debug
  ex2_config = debug
  ex3_config = debug
  minimal_pgl_config = debug

else ifeq ($(config),release)
  c_ex1_config = release
  std_shader_ex1_config = release
  line_testing_config = release
  c_ex2_config = release
  std_shader_ex2_config = release
  c_ex3_config = release
  ex1_config = release
  ex2_config = release
  ex3_config = release
  minimal_pgl_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := c_ex1 std_shader_ex1 line_testing c_ex2 std_shader_ex2 c_ex3 ex1 ex2 ex3 minimal_pgl

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

c_ex1:
ifneq (,$(c_ex1_config))
	@echo "==== Building c_ex1 ($(c_ex1_config)) ===="
	@${MAKE} --no-print-directory -C . -f c_ex1.make config=$(c_ex1_config)
endif

std_shader_ex1:
ifneq (,$(std_shader_ex1_config))
	@echo "==== Building std_shader_ex1 ($(std_shader_ex1_config)) ===="
	@${MAKE} --no-print-directory -C . -f std_shader_ex1.make config=$(std_shader_ex1_config)
endif

line_testing:
ifneq (,$(line_testing_config))
	@echo "==== Building line_testing ($(line_testing_config)) ===="
	@${MAKE} --no-print-directory -C . -f line_testing.make config=$(line_testing_config)
endif

c_ex2:
ifneq (,$(c_ex2_config))
	@echo "==== Building c_ex2 ($(c_ex2_config)) ===="
	@${MAKE} --no-print-directory -C . -f c_ex2.make config=$(c_ex2_config)
endif

std_shader_ex2:
ifneq (,$(std_shader_ex2_config))
	@echo "==== Building std_shader_ex2 ($(std_shader_ex2_config)) ===="
	@${MAKE} --no-print-directory -C . -f std_shader_ex2.make config=$(std_shader_ex2_config)
endif

c_ex3:
ifneq (,$(c_ex3_config))
	@echo "==== Building c_ex3 ($(c_ex3_config)) ===="
	@${MAKE} --no-print-directory -C . -f c_ex3.make config=$(c_ex3_config)
endif

ex1:
ifneq (,$(ex1_config))
	@echo "==== Building ex1 ($(ex1_config)) ===="
	@${MAKE} --no-print-directory -C . -f ex1.make config=$(ex1_config)
endif

ex2:
ifneq (,$(ex2_config))
	@echo "==== Building ex2 ($(ex2_config)) ===="
	@${MAKE} --no-print-directory -C . -f ex2.make config=$(ex2_config)
endif

ex3:
ifneq (,$(ex3_config))
	@echo "==== Building ex3 ($(ex3_config)) ===="
	@${MAKE} --no-print-directory -C . -f ex3.make config=$(ex3_config)
endif

minimal_pgl:
ifneq (,$(minimal_pgl_config))
	@echo "==== Building minimal_pgl ($(minimal_pgl_config)) ===="
	@${MAKE} --no-print-directory -C . -f minimal_pgl.make config=$(minimal_pgl_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f c_ex1.make clean
	@${MAKE} --no-print-directory -C . -f std_shader_ex1.make clean
	@${MAKE} --no-print-directory -C . -f line_testing.make clean
	@${MAKE} --no-print-directory -C . -f c_ex2.make clean
	@${MAKE} --no-print-directory -C . -f std_shader_ex2.make clean
	@${MAKE} --no-print-directory -C . -f c_ex3.make clean
	@${MAKE} --no-print-directory -C . -f ex1.make clean
	@${MAKE} --no-print-directory -C . -f ex2.make clean
	@${MAKE} --no-print-directory -C . -f ex3.make clean
	@${MAKE} --no-print-directory -C . -f minimal_pgl.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   c_ex1"
	@echo "   std_shader_ex1"
	@echo "   line_testing"
	@echo "   c_ex2"
	@echo "   std_shader_ex2"
	@echo "   c_ex3"
	@echo "   ex1"
	@echo "   ex2"
	@echo "   ex3"
	@echo "   minimal_pgl"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"