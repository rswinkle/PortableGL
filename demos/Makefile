# GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  swrenderer_config = debug
  sphereworld_config = debug
  sphereworld_color_config = debug
  glm_sphereworld_color_config = debug
  cubemap_config = debug
  grass_config = debug
  gears_config = debug
  modelviewer_config = debug
  pointsprites_config = debug
  shadertoy_config = debug
  raytracing_1weekend_config = debug
  texturing_config = debug
  texturing_ext_config = debug
  multidraw_config = debug
  testprimitives_config = debug
  particles_config = debug
  sdl_renderer_imgui_config = debug
  pgl_imgui_config = debug
  pgl_geometry_imgui_config = debug
  assimp_convert_config = debug

else ifeq ($(config),release)
  swrenderer_config = release
  sphereworld_config = release
  sphereworld_color_config = release
  glm_sphereworld_color_config = release
  cubemap_config = release
  grass_config = release
  gears_config = release
  modelviewer_config = release
  pointsprites_config = release
  shadertoy_config = release
  raytracing_1weekend_config = release
  texturing_config = release
  texturing_ext_config = release
  multidraw_config = release
  testprimitives_config = release
  particles_config = release
  sdl_renderer_imgui_config = release
  pgl_imgui_config = release
  pgl_geometry_imgui_config = release
  assimp_convert_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := swrenderer sphereworld sphereworld_color glm_sphereworld_color cubemap grass gears modelviewer pointsprites shadertoy raytracing_1weekend texturing texturing_ext multidraw testprimitives particles sdl_renderer_imgui pgl_imgui pgl_geometry_imgui assimp_convert

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

swrenderer:
ifneq (,$(swrenderer_config))
	@echo "==== Building swrenderer ($(swrenderer_config)) ===="
	@${MAKE} --no-print-directory -C . -f swrenderer.make config=$(swrenderer_config)
endif

sphereworld:
ifneq (,$(sphereworld_config))
	@echo "==== Building sphereworld ($(sphereworld_config)) ===="
	@${MAKE} --no-print-directory -C . -f sphereworld.make config=$(sphereworld_config)
endif

sphereworld_color:
ifneq (,$(sphereworld_color_config))
	@echo "==== Building sphereworld_color ($(sphereworld_color_config)) ===="
	@${MAKE} --no-print-directory -C . -f sphereworld_color.make config=$(sphereworld_color_config)
endif

glm_sphereworld_color:
ifneq (,$(glm_sphereworld_color_config))
	@echo "==== Building glm_sphereworld_color ($(glm_sphereworld_color_config)) ===="
	@${MAKE} --no-print-directory -C . -f glm_sphereworld_color.make config=$(glm_sphereworld_color_config)
endif

cubemap:
ifneq (,$(cubemap_config))
	@echo "==== Building cubemap ($(cubemap_config)) ===="
	@${MAKE} --no-print-directory -C . -f cubemap.make config=$(cubemap_config)
endif

grass:
ifneq (,$(grass_config))
	@echo "==== Building grass ($(grass_config)) ===="
	@${MAKE} --no-print-directory -C . -f grass.make config=$(grass_config)
endif

gears:
ifneq (,$(gears_config))
	@echo "==== Building gears ($(gears_config)) ===="
	@${MAKE} --no-print-directory -C . -f gears.make config=$(gears_config)
endif

modelviewer:
ifneq (,$(modelviewer_config))
	@echo "==== Building modelviewer ($(modelviewer_config)) ===="
	@${MAKE} --no-print-directory -C . -f modelviewer.make config=$(modelviewer_config)
endif

pointsprites:
ifneq (,$(pointsprites_config))
	@echo "==== Building pointsprites ($(pointsprites_config)) ===="
	@${MAKE} --no-print-directory -C . -f pointsprites.make config=$(pointsprites_config)
endif

shadertoy:
ifneq (,$(shadertoy_config))
	@echo "==== Building shadertoy ($(shadertoy_config)) ===="
	@${MAKE} --no-print-directory -C . -f shadertoy.make config=$(shadertoy_config)
endif

raytracing_1weekend:
ifneq (,$(raytracing_1weekend_config))
	@echo "==== Building raytracing_1weekend ($(raytracing_1weekend_config)) ===="
	@${MAKE} --no-print-directory -C . -f raytracing_1weekend.make config=$(raytracing_1weekend_config)
endif

texturing:
ifneq (,$(texturing_config))
	@echo "==== Building texturing ($(texturing_config)) ===="
	@${MAKE} --no-print-directory -C . -f texturing.make config=$(texturing_config)
endif

texturing_ext:
ifneq (,$(texturing_ext_config))
	@echo "==== Building texturing_ext ($(texturing_ext_config)) ===="
	@${MAKE} --no-print-directory -C . -f texturing_ext.make config=$(texturing_ext_config)
endif

multidraw:
ifneq (,$(multidraw_config))
	@echo "==== Building multidraw ($(multidraw_config)) ===="
	@${MAKE} --no-print-directory -C . -f multidraw.make config=$(multidraw_config)
endif

testprimitives:
ifneq (,$(testprimitives_config))
	@echo "==== Building testprimitives ($(testprimitives_config)) ===="
	@${MAKE} --no-print-directory -C . -f testprimitives.make config=$(testprimitives_config)
endif

particles:
ifneq (,$(particles_config))
	@echo "==== Building particles ($(particles_config)) ===="
	@${MAKE} --no-print-directory -C . -f particles.make config=$(particles_config)
endif

sdl_renderer_imgui:
ifneq (,$(sdl_renderer_imgui_config))
	@echo "==== Building sdl_renderer_imgui ($(sdl_renderer_imgui_config)) ===="
	@${MAKE} --no-print-directory -C . -f sdl_renderer_imgui.make config=$(sdl_renderer_imgui_config)
endif

pgl_imgui:
ifneq (,$(pgl_imgui_config))
	@echo "==== Building pgl_imgui ($(pgl_imgui_config)) ===="
	@${MAKE} --no-print-directory -C . -f pgl_imgui.make config=$(pgl_imgui_config)
endif

pgl_geometry_imgui:
ifneq (,$(pgl_geometry_imgui_config))
	@echo "==== Building pgl_geometry_imgui ($(pgl_geometry_imgui_config)) ===="
	@${MAKE} --no-print-directory -C . -f pgl_geometry_imgui.make config=$(pgl_geometry_imgui_config)
endif

assimp_convert:
ifneq (,$(assimp_convert_config))
	@echo "==== Building assimp_convert ($(assimp_convert_config)) ===="
	@${MAKE} --no-print-directory -C . -f assimp_convert.make config=$(assimp_convert_config)
endif

clean:
	@${MAKE} --no-print-directory -C . -f swrenderer.make clean
	@${MAKE} --no-print-directory -C . -f sphereworld.make clean
	@${MAKE} --no-print-directory -C . -f sphereworld_color.make clean
	@${MAKE} --no-print-directory -C . -f glm_sphereworld_color.make clean
	@${MAKE} --no-print-directory -C . -f cubemap.make clean
	@${MAKE} --no-print-directory -C . -f grass.make clean
	@${MAKE} --no-print-directory -C . -f gears.make clean
	@${MAKE} --no-print-directory -C . -f modelviewer.make clean
	@${MAKE} --no-print-directory -C . -f pointsprites.make clean
	@${MAKE} --no-print-directory -C . -f shadertoy.make clean
	@${MAKE} --no-print-directory -C . -f raytracing_1weekend.make clean
	@${MAKE} --no-print-directory -C . -f texturing.make clean
	@${MAKE} --no-print-directory -C . -f texturing_ext.make clean
	@${MAKE} --no-print-directory -C . -f multidraw.make clean
	@${MAKE} --no-print-directory -C . -f testprimitives.make clean
	@${MAKE} --no-print-directory -C . -f particles.make clean
	@${MAKE} --no-print-directory -C . -f sdl_renderer_imgui.make clean
	@${MAKE} --no-print-directory -C . -f pgl_imgui.make clean
	@${MAKE} --no-print-directory -C . -f pgl_geometry_imgui.make clean
	@${MAKE} --no-print-directory -C . -f assimp_convert.make clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   swrenderer"
	@echo "   sphereworld"
	@echo "   sphereworld_color"
	@echo "   glm_sphereworld_color"
	@echo "   cubemap"
	@echo "   grass"
	@echo "   gears"
	@echo "   modelviewer"
	@echo "   pointsprites"
	@echo "   shadertoy"
	@echo "   raytracing_1weekend"
	@echo "   texturing"
	@echo "   texturing_ext"
	@echo "   multidraw"
	@echo "   testprimitives"
	@echo "   particles"
	@echo "   sdl_renderer_imgui"
	@echo "   pgl_imgui"
	@echo "   pgl_geometry_imgui"
	@echo "   assimp_convert"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"